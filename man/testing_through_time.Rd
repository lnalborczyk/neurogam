% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testing_through_time.R
\name{testing_through_time}
\alias{testing_through_time}
\title{Time-resolved Bayesian testing}
\usage{
testing_through_time(
  data,
  participant_id = "participant",
  meeg_id = "eeg",
  time_id = "time",
  predictor_id = "condition",
  kvalue = 20,
  bs = "cr",
  multilevel = TRUE,
  warmup = 1000,
  iter = 2000,
  chains = 4,
  cores = 4,
  threshold = 20,
  n_post_samples = 1000,
  chance_level = 0,
  sesoi = 0
)
}
\arguments{
\item{data}{Dataframe, with ERP or decoding performance data (in long format).}

\item{participant_id}{Character, column in data specifying the participant ID.}

\item{meeg_id}{Character, column in data specifying the M/EEG values.}

\item{time_id}{Character, column in data specifying the time information.}

\item{predictor_id}{Character, column in data specifying the predictor(s).}

\item{kvalue}{Numeric, GAM basis dimension.}

\item{bs}{Character, type of splines to be passed to brms.}

\item{multilevel}{Logical, should we fit a simple GAM or the multilevel GAM with summary statistics per participant?}

\item{warmup}{Numeric, number of warm-up iterations per chain.}

\item{iter}{Numeric, number of total iterations per chain.}

\item{chains}{Numeric, number of MCMCs.}

\item{cores}{Numeric, number of parallel cores to use.}

\item{threshold}{Numeric, threshold for identifying clusters.}

\item{n_post_samples}{Numeric, number of posterior samples to use to compute the posterior probability ratio (the larger the better).}

\item{chance_level}{Numeric, chance level (for analysing time-resolved decoding performance).}

\item{sesoi}{Numeric, smallest effect size of interest (defaults to 0).}
}
\value{
A list containing the identified clusters (i.e., onset and offset) and time-series of posterior probabilities.
}
\description{
Time-resolved testing using Bayesian generalised additive multilevel regression models.
}
\examples{
\dontrun{
# importing some simulated EEG data
data(eeg_data)
head(eeg_data)

# fitting the BGAMM to identify clusters
results <- testing_through_time(data = eeg_data, threshold = 2)

# displaying the identified clusters
print(results$clusters)

# plotting the identified clusters
plot(results)
}

}
\author{
Ladislas Nalborczyk \email{ladislas.nalborczyk@gmail.com}.
}
